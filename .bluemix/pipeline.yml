---
stages:
  - name: dev1
    inputs:
      - type: git
        branch: dev1
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - type: commit
    jobs:
      - name: distribution
        type: builder
        artifact_dir: archive
        enable_tests: true
        test_file_pattern: '*.xml, generated/*.xml'
        build_type: npm
        script: |-
          #!/bin/bash
          git config --global user.email "wgpannel@us.ibm.com"
          git config --global user.name "wil.pannell"

          export NVM_DIR=/home/pipeline/nvm
          export NODE_VERSION=v7.10.1
          export NVM_VERSION=v0.33.2
          npm config delete prefix \
            && curl https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | sh \
            && . $NVM_DIR/nvm.sh \
            && nvm install $NODE_VERSION \
            && nvm alias default $NODE_VERSION \
            && nvm use default \
            && node -v \
            && npm -v \
            && export PATH=${NVM_DIR}/versions/node/${NODE_VERSION}/bin:./node_modules/.bin:$PATH

          git branch -a
          git branch integration
          git fetch origin integration
          git merge integration --ff-only

          npm install -s
          npm run ci -s
          npm run dist -s
          npm prune -s

          ls -al
          mkdir -p archive
          ls -al
          mkdir -p generated
          scripts/archive.sh
          git whatchanged --pretty=format:'%s %cn %h %cd' -1 > archive/changelog.txt

          git checkout integration
          git pull origin integration
          git merge dev1 --no-ff --log
          git push origin integration --no-verify

          git checkout --track origin/archive
          git pull origin archive
          git merge dev1 --no-ff --log
          rm changelog.txt
          ls -al
          cp archive/changelog.txt .
          echo "${BUILD_NUMBER}" >> changelog.txt
          ls -al
          git add .
          git commit -m "$(cat archive/changelog.txt)" --no-verify
          git push origin archive --no-verify

          git checkout --track origin/distribution
          git pull origin distribution
          cp archive/* .
          git add .
          git commit -m "$(cat archive/changelog.txt)" --no-verify
          git push origin distribution --no-verify

          ls -al
  - name: dev2
    inputs:
      - type: git
        branch: dev2
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - enabled: false
    jobs:
      - name: distribution
        type: builder
        artifact_dir: archive
        enable_tests: true
        test_file_pattern: '*.xml, generated/*.xml'
        build_type: npm
        script: |-
          #!/bin/bash
          git config --global user.email "wgpannel@us.ibm.com"
          git config --global user.name "wil.pannell"

          export NVM_DIR=/home/pipeline/nvm
          export NODE_VERSION=v7.10.1
          export NVM_VERSION=v0.33.2
          npm config delete prefix \
            && curl https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | sh \
            && . $NVM_DIR/nvm.sh \
            && nvm install $NODE_VERSION \
            && nvm alias default $NODE_VERSION \
            && nvm use default \
            && node -v \
            && npm -v \
            && export PATH=${NVM_DIR}/versions/node/${NODE_VERSION}/bin:./node_modules/.bin:$PATH

          git branch -a
          git branch integration
          git fetch origin integration
          git merge integration --ff-only

          npm install -s
          npm run ci -s
          npm run dist -s
          npm prune -s

          ls -al
          mkdir -p archive
          ls -al
          mkdir -p generated
          scripts/archive.sh
          git whatchanged --pretty=format:'%s %cn %h %cd' -1 > archive/changelog.txt

          git checkout integration
          git pull origin integration
          git merge dev2 --no-ff --log
          git push origin integration --no-verify

          git checkout --track origin/archive
          git pull origin archive
          git merge dev2 --no-ff --log
          rm changelog.txt
          ls -al
          cp archive/changelog.txt .
          echo "${BUILD_NUMBER}" >> changelog.txt
          ls -al
          git add .
          git commit -m "$(cat archive/changelog.txt)" --no-verify
          git push origin archive --no-verify

          git checkout --track origin/distribution
          git pull origin distribution
          cp archive/* .
          git add .
          git commit -m "$(cat archive/changelog.txt)" --no-verify
          git push origin distribution --no-verify

          ls -al
  - name: integration
    inputs:
      - type: git
        branch: archive
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - type: commit
    properties:
    - name: SAUCE_USERNAME
      value: {{services.test.parameters.username}}
      type: text
    - name: SAUCE_ACCESS_KEY
      value: {{services.test.parameters.key}}
      type: text
    jobs:
      - name: 'saucelabs'
        type: builder
        enable_tests: true
        test_file_pattern: '*.xml, generated/*.xml'
        build_type: npm
        script: |-
          #!/bin/bash
          git config --global user.email "wgpannel@us.ibm.com"
          git config --global user.name "wil.pannell"

          export NVM_DIR=/home/pipeline/nvm
          export NODE_VERSION=v7.10.1
          export NVM_VERSION=v0.33.2
          npm config delete prefix \
            && curl https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | sh \
            && . $NVM_DIR/nvm.sh \
            && nvm install $NODE_VERSION \
            && nvm alias default $NODE_VERSION \
            && nvm use default \
            && node -v \
            && npm -v \
            && export PATH=${NVM_DIR}/versions/node/${NODE_VERSION}/bin:./node_modules/.bin:$PATH

          npm install
          mkdir -p generated
          npm run test:sauce -s
  - name: dev
    inputs:
      - type: git
        branch: distribution
        service: ${SOURCE_CONTROL_SERVICE}
    triggers:
      - type: commit
    jobs:
      - name: 'promote to dev'
        type: deployer
        target:
          region_id: ${REGION}
          organization: ${ORGANIZATION}
          space: ${DEVELOPMENT}
          application: ${APPLICATION}
        script: |-
          #!/bin/bash
          printenv

          ls -al
          tar -zxvf dist.tar.gz
          rm dist.tar.gz
          ls -al

          cf add-plugin-repo CF-Community http://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -r CF-Community <<< y
          cf bgd "${CF_APP}"-dev -f ./manifest.yml

          cf create-route "${CF_SPACE}" mybluemix.net -n "${CF_APP}"-dev
          cf map-route "${CF_APP}"-dev mybluemix.net -n "${CF_APP}"-dev
